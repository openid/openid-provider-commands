name: gh-pages

on:
  # Runs on pushes targeting the default branch
  push:
    paths-ignore:
      - README.md
      - CONTRIBUTING.md
      - LICENSE.md
      - .gitignore
      - '.github/**'
    branches: ["*"]
  release:
    types:
      - created
      - edited

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    env:
        BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Show env
        run: echo "$GITHUB_CONTEXT"
      
      - name: Create html folder
        run: mkdir html

      - name: Show folders
        run: ls -al

      - name: Show branch name
        run: echo "$BRANCH_NAME"

      # Set up Haskell so we can install MMark
      - name: Set up Haskell
        uses: actions/setup-haskell@v1
        with:
          ghc-version: '8.10.7'

      # Install MMark using cabal
      - name: Install MMark
        run: |
          cabal update
          cabal install mmark

      # Convert the Markdown file to RFC XML using MMark
      - name: Convert Markdown to RFC XML with MMark
        run: |
          mmark -xml2rfc openid-provider-commands-1_0.md > openid-provider-commands-1_0.xml

      # Setup Python so we can install xml2rfc
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 

      # Install xml2rfc using pip
      - name: Install xml2rfc
        run: pip install xml2rfc

      # Convert the RFC XML to HTML and text using xml2rfc
      - name: Render HTML
        run: xml2rfc openid-provider-commands-1_0.xml --html -o openid-provider-commands-1_0.html
      - name: Render Text
        run: xml2rfc openid-provider-commands-1_0.xml --text

      # Copy the HTML to the html folder for gh-pages
      - id: deployment
        name: Deploy to GitHub Pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: html
          keep_history: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
